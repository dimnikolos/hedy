start: _EOL* statement+

statement: if_statement else_statement?
         | repeat
         | assignment _EOL+
         | print _EOL+

if_statement: "if " equality_check _EOL INDENT statement+ DEDENT
else_statement: " else " _EOL INDENT statement+ DEDENT
equality_check: text " is " text (" and " equality_check)* -> equality_check
repeat: "repeat" number "times" _EOL INDENT statement+ DEDENT

assignment: NAME " is " sum
          | ask


print: "print " sum+
ask: text " is ask " sum -> ask

?sum: product
   | sum "+" product -> addition
   | sum "-" product -> substraction

?product: atom
    | product "*" atom -> multiplication
    | product "/" atom -> division
    | product "%" atom -> modulo

?atom: quoted_text
      | NAME
      | INTEGER
      | NAME "at" atom -> list_access


number: INTEGER -> number
text: (LETTER | DIGIT)+ -> text //TODO accents need to be brought back



punctuation : PUNCTUATION -> punctuation
textwithspaces: (LETTER | DIGIT | WS_INLINE)+ -> text
PUNCTUATION: "!" | "?" | "." //uppercase places tokens in tree

_EOL: /(\r?\n[\t ]*)+/

quoted_text: QUOTE (LETTER | DIGIT | WS_INLINE)+ QUOTE -> text

QUOTE : "'"

%import common.LETTER   // imports from terminal library
%import common.DIGIT   // imports from terminal library
%import common.WS_INLINE
%import common.SIGNED_INT -> INTEGER
%import common.CNAME -> NAME
%import common._STRING_ESC_INNER


%declare INDENT DEDENT

