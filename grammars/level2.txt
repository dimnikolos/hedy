start: program
program: command (" ")* (_EOL+ command (" ")*)* _EOL* //lines may end on spaces and might be separated by many newlines
command: "print " ( list_access | (text punctuation)| text) (" " ( list_access | (text punctuation)| text) )*  -> print
         | text " is ask " textwithspaces punctuation* -> ask
         | text " is " text ((", "|",") text)+  -> assign_list
         | text " is " text -> assign //placing it here means print is will print 'is' and print is Felienne will print 'is Felienne'
         | text " " textwithspaces -> invalid

_EOL: "\r"?"\n"

ACCENTED_LETTER: "á" | "é" | "ó"

var: LETTER+ -> var
list_access : var " at " (index | random) -> list_access
index : DIGIT+
random : "random"
punctuation : PUNCTUATION -> punctuation
textwithspaces: (LETTER | ACCENTED_LETTER | DIGIT | WS_INLINE)+ -> text
text: (LETTER | ACCENTED_LETTER | DIGIT)+ -> text
PUNCTUATION: "!" | "?" | "." //uppercase places tokens in tree

%import common.LETTER   // imports from terminal library
%import common.DIGIT   // imports from terminal library
%import common.WS_INLINE   // imports from terminal library
%import common.NEWLINE   // imports from terminal library



